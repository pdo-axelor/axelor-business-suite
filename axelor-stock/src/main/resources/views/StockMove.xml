<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_5.0.xsd">
    
    <grid name="stock-move-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGrid" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
    	</toolbar>
        <field name="stockMoveSeq"/>
        <field name="fromStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="toStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="statusSelect"/>
        <field name="typeSelect" hidden="true" />
        <field name="toAddressStr" hidden="true" form-view="address-form" grid-view="address-grid"/>
        <button name="printStockMove" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirection" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>
    
     <grid name="stock-move-out-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGrid" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
			<button name="printPickingStockMoveGrid" title="Print Picking StockMove(s)" onClick="action-print-picking-stock-move" icon="fa-print"/>
    	</toolbar>
        <field name="stockMoveSeq"/>
        <field name="fromStockLocation" form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="fromAddressStr" hidden="true"/>
        <field name="toAddressStr"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="partner" form-view="partner-form" grid-view="partner-grid"/>
        <field name="statusSelect"/>
        <field name="typeSelect" hidden="true" />
        <button name="printStockMove" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirection" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>
    
    <grid name="stock-move-in-grid" title="Stock moves" model="com.axelor.apps.stock.db.StockMove" orderBy="-estimatedDate">
    	<toolbar>
			<button name="printStockMoveGrid" title="Print StockMove(s)" onClick="action-print-stock-move" icon="fa-print"/>
    	</toolbar>
        <field name="stockMoveSeq"/>
        <field name="toStockLocation"  form-view="stock-location-form" grid-view="stock-location-grid"/>
        <field name="estimatedDate"/>
        <field name="realDate"/>
        <field name="fromAddressStr"/>
        <field name="toAddressStr" hidden="true"/>
        <field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="tradingName" form-view="trading-name-form" grid-view="trading-name-grid" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
        <field name="partner"  form-view="partner-form" grid-view="partner-grid"/>
        <field name="statusSelect"/>
        <field name="typeSelect" hidden="true" />
        <button name="printStockMove" title="Print" icon="fa-print" onClick="action-print-stock-move" readonlyIf="statusSelect == 1"/>
        <button name="viewDirection" icon="fa-location-arrow" onClick="action-stock-move-validate-address,action-stock-move-method-view-direction" readonlyIf="typeSelect != 2 || statusSelect == 1"/>
    </grid>

    <calendar name="stock-move-calendar" model="com.axelor.apps.stock.db.StockMove" eventStart="estimatedDate"
        eventLength="24" mode="month" colorBy="statusSelect" editable="false" title="Stock moves">
        <field name="name" />
    </calendar>

	<form name="stock-move-form" title="Stock move" model="com.axelor.apps.stock.db.StockMove"
		 onLoad="action-stock-move-attrs-typeselect-change,action-stock-move-hide-reserved-qty,action-stock-move-method-filter-printing-settings" onNew="action-group-stock-stockmove-onnew">
		 
		 <menubar>
		 		<menu title="Reports">
		 			<item title="Print" action="save,action-print-stock-move" showIf="statusSelect != 1"/>
					<item title="Print picking order" action="save,action-print-picking-stock-move" showIf="statusSelect != 1 &amp;&amp; typeSelect == 2"/>
		 		</menu>
		 		<menu title="Tools">
		 			<item title="View Direction" showIf="typeSelect == 2 &amp;&amp; statusSelect!=4" action="action-stock-move-validate-address,action-stock-move-method-view-direction"/>
		 			<item title="Split into 2" action="save,action-stock-move-split-into-2"/>
				    <item title="Split by unit" action="save,action-stock-move-method-split-stock-move-lines-unit"/>
				    <item title="Special split"  action="save,action-stock-move-wizard-special-split"/>
				    <item title="Ship/Receive all products" action="save,action-stock-move-ship-recieve-all-products"/>
		 		</menu>
		 </menubar>
		 
	  <panel title="Status">
		  <field name="statusSelect" widget="NavSelect" colSpan="8"/>
		  <field name="cancelReason" canView="false" showIf="cancelReason != null" readonly="true" colSpan="4"/>
	  </panel>
	  <panel name="main">
		  <field name="typeSelect" title="Type" colSpan="4" onChange="action-stock-move-set-default-stock-locations, action-stock-move-attrs-typeselect-change" readonlyIf="statusSelect != 1"/>
		  <field name="conformitySelect" onChange="action-stock-move-method-change-conformity" readonlyIf="statusSelect == 3 || statusSelect == 4"/>
	  </panel>
	  <panel>
	    <panel title="Stock move reference" name="stockMoveRef">
	      <field name="stockMoveSeq" colSpan="12"/>
	      <field name="name" colSpan="12" readonlyIf="statusSelect == 3 || statusSelect == 4"/>
	      <field name="company" canEdit="false" widget="SuggestBox" form-view="company-form" colSpan="12" readonlyIf="statusSelect != 1" grid-view="company-grid"
				 onChange="action-stock-move-record-update-info-company"/>
		  <field name="tradingName" canEdit="false" grid-view="trading-name-grid" form-view="trading-name-form" colSpan="12" if="__config__.app.getApp('base').enableTradingNamesManagement"
				 readonlyIf="statusSelect != 1" domain=":company MEMBER OF self.companySet" onChange="action-stock-move-method-filter-printing-settings"/>
	      <field name="partner" domain="self.isContact = false" form-view="partner-form" grid-view="partner-grid" colSpan="12" readonlyIf="statusSelect != 1" onChange="action-stock-move-record-partner-delivery-informations"/>
	    </panel>
	    <panel title="Stock move informations" name="stockMoveInformation">
	      <field name="fromStockLocation" domain="self.company = :company" onChange="action-stock-move-group-from-location-onchange" readonlyIf="statusSelect != 1" form-view="stock-location-form" grid-view="stock-location-grid"/>
	      <field name="toStockLocation" domain="self.company = :company" onChange="action-stock-move-group-to-location-onchange" readonlyIf="statusSelect != 1" form-view="stock-location-form" grid-view="stock-location-grid"/>
	      <field name="estimatedDate" colSpan="6" readonlyIf="statusSelect != 1"/>
	      <field name="realDate" colSpan="6"/>
	      <field name="isWithReturnSurplus" colSpan="6" showIf="typeSelect == 3"/>
	      <field name="isWithBackorder" colSpan="6"/>
	      <field name="fromAddress" showIf="!$readonly() &amp;&amp; statusSelect == 1 &amp;&amp; typeSelect == 3" colSpan="12" onSelect="action-stock-move-attrs-domain-address" onChange="action-stock-move-method-set-addresses-str"  readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="address-partner-address-form"/>
            <field name="fromAddressStr" showIf="typeSelect == 3" readonlyIf="statusSelect &gt; 1" height="5" colSpan="12">
				<viewer>{{record.fromAddressStr}}</viewer>
			</field>
	      <field name="toAddress" showIf="!$readonly() &amp;&amp; statusSelect == 1 &amp;&amp; typeSelect == 2" colSpan="12" onSelect="action-stock-move-attrs-domain-address" onChange="action-stock-move-method-set-addresses-str" readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="address-partner-address-form"/>
			<field name="toAddressStr" showIf="typeSelect == 2" readonlyIf="statusSelect &gt; 1" height="5" colSpan="12">
				<viewer>{{record.toAddressStr}}</viewer>
			</field>
	    </panel>
	  </panel>
	  <panel-tabs>
	    <panel-related name="stockMoveLineListPanel" title="Stock move line" field="stockMoveLineList" onChange="action-stock-move-method-compute, action-stock-move-line-method-change-conformity" readonlyIf="statusSelect == 3" form-view="stock-move-line-form" grid-view="stock-move-line-grid"/>
	    <panel-dashlet action="action-stock-move-view-logistical-forms" showIf="id &amp;&amp; typeSelect == 2" title="Logistical forms" />
        <panel name="configuration" title="Configuration"  if-module="axelor-supplychain" if="__config__.app.isApp('supplychain')" >
	      <field name="saleOrder" onChange="action-stock-move-attrs-typeselect-change" readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="sale-order-form" grid-view="sale-order-grid"/>
	      <field name="purchaseOrder" readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="purchase-order-form" grid-view="purchase-order-grid"/>
	      <field name="invoice" readonlyIf="statusSelect == 3 || statusSelect == 4" form-view="invoice-form" grid-view="invoice-grid"/>
          <field name="printingSettings" required="true" canEdit="false"/>
	    </panel>
	  </panel-tabs>

	  <panel sidebar="true" name="actions" title="Actions">
			<button name="plan" title="Plan" icon="fa-calendar" showIf="statusSelect == 1" onClick="action-group-stock-stockmove-plan-click"/>
			<button name="realize" title="Realize" icon="fa-check" showIf="statusSelect == 2" prompt="Are you sure you want to realize this stock move?" onClick="action-group-stock-stockmove-realize-click"/>
			<button name="generateInvoice" title="Generate invoice" if="__config__.app.isApp('supplychain') &amp;&amp; __config__.app.getApp('supplychain').getGenerateInvoiceFromStockMove()" onClick="save,action-supplychain-stock-move-method-generate-invoice" if-module="axelor-supplychain" showIf="statusSelect == 3"/>
			<button name="generateReversion" title="Generate reversion" onClick="save,action-stock-move-method-generate-reversion" showIf="statusSelect == 3"/>
		  	<button name="cancel" title="Cancel" icon="fa-times-circle" showIf="id != null &amp;&amp; statusSelect &gt; 1 &amp;&amp; statusSelect &lt; 4" onClick="action.stock.move.view.cancel"/>
		  	<button name="draft" title="Draft" showIf="statusSelect == 4" onClick="action-group-stock-stockmove-draft-click"/>
    </panel>
	<panel sidebar="true" title="Freight Carrier">
		<field name="shipmentMode" colSpan="12" readonlyIf="statusSelect == 3 || statusSelect == 4"/>
      	<field name="freightCarrierMode" colSpan="12" readonlyIf="statusSelect == 3 || statusSelect == 4"/>
		<field name="trackingNumber" readonlyIf="statusSelect == 3 || statusSelect == 4" />
		<field name="numOfPackages" readonlyIf="statusSelect == 3 || statusSelect == 4" />
		<field name="numOfPalettes" readonlyIf="statusSelect == 3 || statusSelect == 4" />
		<field name="grossWeight" readonlyIf="statusSelect == 3 || statusSelect == 4" />
		<field name="saleOrder.specificPackage" readonly="true"/>
	</panel>
	   
	   <panel sidebar="true" readonly="true"  colSpan="4">  
	 		<field name="exTaxTotal" css="order-subtotal" showTitle="false" colSpan="12">
	              <viewer>
	                  <![CDATA[
	                <dl class="dl-horizontal">
	                    <dt class="order-subtotal-total" x-translate>Total W.T.</dt>
	                    <dd class="order-subtotal-total">{{record.exTaxTotal}}</dd>
	                </dl>
	                ]]>
	            </viewer>
	        </field>
	  </panel>
	</form>
    
    <form name="stock-move-wizard-special-split-form" title="Special split" model="com.axelor.apps.base.db.Wizard">
    	<panel name="main">
	        <field name="splitQty" widget="INTEGER" title="Split in Qty of"/>
	        <button name="split" title="Split" onClick="action-stock-move-method-split-stock-move-lines-special"/>
        </panel>
    </form>
    
    <form name="stock-move-wizard-stock-per-day" title="Stock Availability" model="com.axelor.apps.base.db.Wizard" 
    	 canSave="false" canDelete="false" canCopy="false" canAttach="false" canNew="false"
    	 onNew="action-stock-move-wizard-stock-per-day-defaults">
    	<toolbar>
    		<button icon="img/16px/create_16px.png" name="runWizard" title="Run" onClick="action-stock-move-method-open-stock-per-day" readonlyIf="stockFromDate == null || stockToDate == null || stockLocation == null" />
    	</toolbar>
    	<panel name="main">
    		<field name="stockFromDate" title="From Date" type="date" required="true"/>
    		<field name="stockToDate" title="To Date" type="date" required="true"/>
	        <field name="stockLocation" title="Stock location" type="many-to-one" target="com.axelor.apps.stock.db.StockLocation" required="true" />
	        <field name="productSet" title="Products" type="many-to-many" target="com.axelor.apps.base.db.Product" colSpan="12" />
        </panel>
    </form>
    
    <action-view title="Special split" model="com.axelor.apps.base.db.Wizard" name="action-stock-move-wizard-special-split">
	    <view type="form" name="stock-move-wizard-special-split-form"/>
	    <view-param name="popup" value="reload"/>
        <view-param name="forceEdit" value="true"/>
        <view-param name="show-toolbar" value="false"/>
	    <view-param name="show-confirm" value="false" />
   	  	<view-param name="popup-save" value="false"/>
	    <view-param name="width" value="200" />
	    <context name="stockMoveLineList" expr="eval:stockMoveLineList" if="stockMoveLineList != null" />
	</action-view>
	
	<form name="stock-move-split-into-2-form" title="Split into 2" model="com.axelor.apps.stock.db.StockMove" width="large">
    	<panel name="main">
	        <panel-related field="stockMoveLineList" colSpan="12" grid-view="stock-move-line-split-grid" canEdit="true" form-view="stock-move-line-form"/>
	        <button name="split" title="Split" onClick="action-stock-move-method-split-into-2"/>
        </panel>
    </form>
    
    
    <action-method name="action-stock-move-method-compute">
    	<call class="com.axelor.apps.stock.web.StockMoveController" method="compute"/>
    </action-method>
    
    <action-view title="Split into 2" model="com.axelor.apps.stock.db.StockMove" name="action-stock-move-split-into-2">
	    <view type="form" name="stock-move-split-into-2-form"/>
	    <view-param name="popup" value="reload"/>
	    <view-param name="forceEdit" value="true"/> 
	    <view-param name="show-toolbar" value="false"/>
	    <view-param name="show-confirm" value="false" />
   	  	<view-param name="popup-save" value="false"/>
	    <view-param name="width" value="200" />
	    <context name="_showRecord" expr="eval: __this__.id" />
	</action-view>
	
    <!-- <action-attrs name="action-stock-move-attrs-title-realize-button">
    	<attribute name="title" for="realize" expr="eval: (fromStockLocation) ? ((fromStockLocation?.typeSelect != 1 &amp;&amp; toStockLocation?.typeSelect == 1) ? 'Receive' : 'Send') : ((toStockLocation?.typeSelect == 1) ? 'Receive' : 'Send')"/>
    </action-attrs> -->
    
    <action-group name="action-group-stock-stockmove-onnew">
    	<action name="action-stock-move-record-new"/>
    	<action name="action-stock-move-attrs-typeselect-change"/>
		<action name="action-stock-move-hide-reserved-qty"/>
    </action-group>
    
	<action-group name="action-group-stock-stockmove-plan-click">
	 	<action name="save"/>
	  	<action name="action-stock-move-method-plan"/>
	  	<action name="save"/>
	</action-group>
    
	<action-group name="action-group-stock-stockmove-realize-click">
	  	<action name="save"/>
    	<action name="action-stock-move-check-stock-move-line-real-qty"/>
    	<action name="action-stock-move-method-realize"/>
    	<action name="save"/>
	</action-group>

  	<action-group name="action-group-stock-stockmove-draft-click">
	  	<action name="save"/>
    	<action name="action-stock-move-record-draft"/>
    	<action name="save"/>
  	</action-group>

	<action-group name="action-stock-move-group-to-location-onchange">
		<action name="action-stock-move-set-to-address"/>
        <action name="action-stock-move-method-set-addresses-str"/>
	</action-group>

	<action-group name="action-stock-move-group-from-location-onchange">
		<action name="action-stock-move-set-from-address"/>
		<action name="action-stock-move-method-set-addresses-str"/>
	</action-group>

     <action-attrs name="action-stock-move-attrs-typeselect-change">
    	<attribute name="title" for="stockMoveRef" expr="eval: com.axelor.i18n.I18n.get('Internal move reference')" if="typeSelect == 1"/>
    	<attribute name="title" for="stockMoveRef" expr="eval: com.axelor.i18n.I18n.get('Outgoing move reference')" if="typeSelect == 2"/>
    	<attribute name="title" for="stockMoveRef" expr="eval: com.axelor.i18n.I18n.get('Incoming move reference')" if="typeSelect == 3"/>
    	<attribute name="title" for="stockMoveInformation" expr="eval: com.axelor.i18n.I18n.get('Internal move information')" if="typeSelect == 1"/>
    	<attribute name="title" for="stockMoveInformation" expr="eval: com.axelor.i18n.I18n.get('Outgoing move information')" if="typeSelect == 2"/>
    	<attribute name="title" for="stockMoveInformation" expr="eval: com.axelor.i18n.I18n.get('Incoming move information')" if="typeSelect == 3"/>
    	<attribute name="title" for="stockMoveLineListPanel" expr="eval: com.axelor.i18n.I18n.get('Internal move line')" if="typeSelect == 1"/>
    	<attribute name="title" for="stockMoveLineListPanel" expr="eval: com.axelor.i18n.I18n.get('Outgoing move line')" if="typeSelect == 2"/>
    	<attribute name="title" for="stockMoveLineListPanel" expr="eval: com.axelor.i18n.I18n.get('Incoming move line')" if="typeSelect == 3"/>
    	<attribute name="title" for="stockMoveLineList" expr="eval: com.axelor.i18n.I18n.get('Internal move line')" if="typeSelect == 1"/>
    	<attribute name="title" for="stockMoveLineList" expr="eval: com.axelor.i18n.I18n.get('Outgoing move line')" if="typeSelect == 2"/>
    	<attribute name="title" for="stockMoveLineList" expr="eval: com.axelor.i18n.I18n.get('Incoming move line')" if="typeSelect == 3"/>
    	<attribute name="hidden" for="stockMoveLineList.unitPriceUntaxed" expr="eval: saleOrder?.inAti"/>
    	<attribute name="hidden" for="stockMoveLineList.unitPriceTaxed" expr="eval: !saleOrder?.inAti"/>
    </action-attrs>
    
    <action-attrs name="action-stock-move-attrs-domain-address">
		<attribute name="domain" for="fromAddress" expr="eval: &quot;self.id IN (${(partner?.partnerAddressList?.findAll{it.isDeliveryAddr}.collect{it.address.id}+[null]).join(',')})&quot;" />
		<attribute name="domain" for="toAddress" expr="eval: &quot;self.id IN (${(partner?.partnerAddressList?.findAll{it.isDeliveryAddr}.collect{it.address.id}+[null]).join(',')})&quot;" />
    </action-attrs>
    
    <action-attrs name="action-stock-move-wizard-stock-per-day-defaults">
    	<attribute name="value" for="stockFromDate" expr="eval:__date__"/>
    	<attribute name="value" for="stockToDate" expr="eval:__date__"/>
    </action-attrs>
	
	<action-attrs name="action-stock-move-hide-reserved-qty">
        <attribute for="stockMoveLineList.reservedQty" name="hidden" expr="eval: typeSelect != 2"/>
	</action-attrs>
    
    <action-record name="action-stock-move-record-draft" model="com.axelor.apps.stock.db.StockMove">
    	<field name="statusSelect" expr="eval: 1"/>
    </action-record>
    
    <action-record name="action-stock-move-record-new" model="com.axelor.apps.stock.db.StockMove">
        <field name="company"  expr="eval:__user__.activeCompany" if="__user__.activeCompany != null"/>
    	<field name="company"  expr="eval:__repo__(Company).all().fetchOne()" if="__user__.activeCompany == null &amp;&amp; __repo__(Company).all().fetch().size == 1"/>
	    <field name="statusSelect" expr="eval: 1"/>
	    <field name="isWithBackorder" expr="eval:true" />
	    <field name="estimatedDate" expr="eval:__config__.app.getTodayDate()"/>
	    <field name="typeSelect" expr="eval: _typeSelect"/>
	    <field if="_typeSelect == '3'" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.defaultStockLocation"/>
		<field if="_typeSelect == '3'" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.supplierVirtualStockLocation"/>
		<field if="_typeSelect == '2'" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.defaultStockLocation"/>
		<field if="_typeSelect == '2'" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',__user__.activeCompany?.id).fetchOne()?.customerVirtualStockLocation"/>
		<field name="printingSettings" expr="eval: __user__.activeCompany?.printingSettings" if="__user__.activeCompany != null"/>
	</action-record>
	
	<action-record name="action-stock-move-set-from-address" model="com.axelor.apps.stock.db.StockMove">
		<field name="fromAddress" expr="eval:fromStockLocation?.address" />
	</action-record>
	
	<action-record name="action-stock-move-set-to-address" model="com.axelor.apps.stock.db.StockMove">
		<field name="toAddress" expr="eval:toStockLocation?.address" />
	</action-record>
	
	<action-record name="action-stock-move-set-default-stock-locations" model="com.axelor.apps.stock.db.StockMove">
	    <field if="typeSelect == 2" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.defaultStockLocation"/>
  		<field if="typeSelect == 2" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.customerVirtualStockLocation"/>
  		<field if="typeSelect == 3" name="toStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.defaultStockLocation"/>
  		<field if="typeSelect == 3" name="fromStockLocation" expr="eval:__repo__(StockConfig).all().filter('company.id = ?',company != null ? company.id : __user__.activeCompany?.id).fetchOne()?.supplierVirtualStockLocation"/>
	</action-record>
	
	<action-record name="action-stock-move-record-partner-delivery-informations" model="com.axelor.apps.stock.db.StockMove">
    	<field name="shipmentMode" expr="eval: partner?.shipmentMode"/>	
    	<field name="freightCarrierMode" expr="eval: partner?.freightCarrierMode"/>
	</action-record>
	
	<action-method name="action-stock-move-method-plan">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="plan"/>
	</action-method>
	
	<action-method name="action-stock-move-method-realize">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="realize"/>
	</action-method>
	
	<action-method name="action-stock-move-method-cancel">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="cancel"/>
	</action-method>
	
	<action-method name="action-supply-chain-method-update-so-on-cancel" if-module="axelor-supplychain">
		<call class="com.axelor.apps.supplychain.web.SaleOrderController" method="updateSaleOrderOnCancel" if="__config__.app.isApp('supplychain')" />
	</action-method>
	
	<action-method name="action-supply-chain-method-update-po-on-cancel" if-module="axelor-supplychain">
		<call class="com.axelor.apps.supplychain.web.PurchaseOrderController" method="updatePurchaseOrderOnCancel" if="__config__.app.isApp('supplychain')"  />
	</action-method>
	
	<action-method name="action-print-stock-move">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="printStockMove"/>
	</action-method>

	<action-method name="action-print-picking-stock-move">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="printPickingStockMove"/>
	</action-method>
	
	<action-method name="action-stock-move-method-split-into-2">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="splitInto2"/>
	</action-method>
	
	<action-method name="action-stock-move-method-split-stock-move-lines-special">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="splitStockMoveLinesSpecial"/>
	</action-method>
	
	<action-method name="action-stock-move-method-split-stock-move-lines-unit">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="splitStockMoveLinesUnit"/>
	</action-method>
	
	<action-method name="action-stock-move-ship-recieve-all-products">
	    <call class="com.axelor.apps.stock.web.StockMoveController" method="shipReciveAllProducts"/>
	</action-method>
	
	<action-method name="action-stock-move-method-generate-reversion">
	    <call class="com.axelor.apps.stock.web.StockMoveController" method="generateReversion"/>
	</action-method>
	
	<action-method name="action-stock-move-method-view-direction">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="viewDirection"/>
	</action-method>
	
	<action-method name="action-stock-move-method-change-conformity">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="changeConformityStockMove"/>
	</action-method>
	
	<action-method name="action-stock-move-line-method-change-conformity">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="changeConformityStockMoveLine"/>
	</action-method>
	
	<action-method name="action-stock-move-method-open-stock-per-day">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="openStockPerDay"/>
	</action-method>

	<action-method name="action-stock-move-method-set-addresses-str">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="fillAddressesStr"/>
	</action-method>

	<action-validate name="action-stock-move-check-stock-move-line-real-qty">
		<alert message="The move doesn't contain any product, do you wish to continue ?" if="stockMoveLineList != null &amp;&amp; stockMoveLineList.sum{it->it.realQty} == 0"/>
	</action-validate>
	
	<action-validate name="action-stock-move-validate-address">
	    <error message="Both source location address and delivery (to) address are required to define the delivery itinerary" if="fromStockLocation?.address == null &amp;&amp; toAddress == null"/>
	    <error message="Please fill in the source (from) location address to get the delivery itinerary." if="fromStockLocation?.address == null"/>
	    <error message="Please fill in the delivery (to) address to get the delivery itinerary." if="toAddress == null"/>
	</action-validate>

    <action-view name="action-stock-move-view-logistical-forms" title="Logistical forms"
        model="com.axelor.apps.stock.db.LogisticalForm">
        <view type="grid" name="logistical-form-stock-move-grid" />
        <view type="form" name="logistical-form-form" />
        <domain>self.id IN (:logisticalFormIdList)</domain>
        <context name="logisticalFormIdList" expr="call: com.axelor.apps.stock.service.LogisticalFormService:getIdList(__this__)" />
    </action-view>

	<search-filters name="customer-deliveries-filters" model="com.axelor.apps.stock.db.StockMove" title="Customer deliveries filters">
		<filter title="Deliveries to prepare">
			<domain>self.statusSelect = 2</domain>
		</filter>
		<filter title="Late Deliveries">
			<domain>self.estimatedDate &lt; CURRENT_DATE</domain>
		</filter>
		<filter title="Deliveries History">
			<domain>self.statusSelect = 3</domain>
		</filter>
		<filter title="Deliveries Cancelled">
			<domain>self.statusSelect = 4</domain>
		</filter>
	</search-filters>
	
	<search-filters name="supplier-arrivals-filters" model="com.axelor.apps.stock.db.StockMove" title="Supplier arrivals filters">
		<filter title="Today Arrivals">
			<domain>self.estimatedDate = CURRENT_DATE</domain>
		</filter>
		<filter title="Upcoming arrivals">
			<domain>self.estimatedDate &lt; :_newDate</domain>
		</filter>
		<filter title="Arrivals History">
			<domain>self.statusSelect = 3</domain>
		</filter>
		<filter title="Cancelled Arrivals">
			<domain>self.statusSelect = 4</domain>
		</filter>
	</search-filters>
	
	<search-filters name="internal-stock-move-filters" model="com.axelor.apps.stock.db.StockMove" title="Internal Stock Move filters">
		<filter title="Moves To Prepare">
			<domain>self.statusSelect = 2</domain>
		</filter>
		<filter title="Moves History">
			<domain>self.statusSelect = 3</domain>
		</filter>
		<filter title="Moves Cancelled">
			<domain>self.statusSelect = 4</domain>
		</filter>
	</search-filters>

	<action-view name="action.stock.move.view.cancel" title="Cancellation" model="com.axelor.apps.stock.db.StockMove">
		<view type="form" name="stock-move-cancel-wizard-form"/>
		<view-param name="popup" value="reload"/>
		<view-param name="show-toolbar" value="false"/>
		<view-param name="show-confirm" value="false" />
		<view-param name="popup-save" value="false"/>
		<view-param name="forceEdit" value="true" />
		<context name="_showRecord" expr="eval: __this__.id" />
		<context name="_xApplicationType" expr="eval: __this__.getClass().getCanonicalName()"/>
	</action-view>

	<form name="stock-move-cancel-wizard-form" model="com.axelor.apps.stock.db.StockMove" title="Cancellation confirmation" >
		<panel name="main">
			<field name="cancelReason" domain="self.applicationType = :_xApplicationType" colOffset="4" colSpan="4" widget="SuggestBox" canNew="false" canEdit="false"/>
			<button readonlyIf="cancelReason == null" name="cancelConfirm" title="Confirm cancellation" onClick="action-stock-move-method-cancel" colOffset="4" colSpan="4"/>
		</panel>
	</form>

	<action-record name="action-stock-move-record-update-info-company" model="com.axelor.apps.stock.db.StockMove">
		<field name="tradingName" expr="eval: null" if="__config__.app.getApp('base').enableTradingNamesManagement"/>
		<field name="printingSettings" expr="eval: company?.printingSettings"/>
	</action-record>

	<action-method name="action-stock-move-method-filter-printing-settings">
		<call class="com.axelor.apps.stock.web.StockMoveController" method="filterPrintingSettings"/>
	</action-method>

</object-views>
