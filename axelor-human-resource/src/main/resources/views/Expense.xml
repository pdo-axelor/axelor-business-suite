<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_4.1.xsd">

	<grid name="expense-grid" title="Expenses" model="com.axelor.apps.hr.db.Expense" orderBy="-sentDate">
		<hilite color="danger" if="statusSelect == 5"/>
		<hilite color="success" if="statusSelect == 3 || statusSelect == 4"/>
		<hilite color="warning" if="statusSelect == 2"/>
		<field name="expenseSeq"/>
		<field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="sentDate"/>
		<field name="period" form-view="period-form" grid-view="period-grid"/>
		<field name="user" form-view="user-form" grid-view="user-grid"/>
		<field name="statusSelect"/>
	</grid>
	
	<grid name="expense-payroll-preparation-grid" title="Expenses" model="com.axelor.apps.hr.db.Expense" orderBy="-sentDate">
		<field name="sentDate"/>
		<field name="period" form-view="period-form" grid-view="period-grid"/>
		<field name="inTaxTotal" aggregate="sum"/>
	</grid>
	
	<grid name="expense-validate-grid" title="Expenses" model="com.axelor.apps.hr.db.Expense" orderBy="-sentDate">
		<toolbar>
			<button name="showSubordinateExpenseToValidate" title="Show expenses to be validated by my subordinates" onClick="com.axelor.apps.hr.web.expense.ExpenseController:showSubordinateExpenses"/>
		</toolbar>
		<hilite background="danger" if="$moment(sentDate).diff(todayDate,'days') &lt;= 0"/>
		<hilite background="warning" if="$moment(todayDate).diff(sentDate,'days') &gt;= 7"/>
		<field name="expenseSeq"/>
		<field name="company" form-view="company-form" grid-view="company-grid"/>
		<field name="sentDate"/>
		<field name="period" form-view="period-form" grid-view="period-grid"/>
		<field name="user" form-view="user-form" grid-view="user-grid"/>
		<field name="statusSelect"/>
	</grid>

	<form name="expense-form" title="Expense" model="com.axelor.apps.hr.db.Expense" width="large" canNew="false"
	    onNew="action-expense-record-default,action-expense-attrs-buttons,action-expense-attrs-multiple-users" 
	    onLoad="action-expense-attrs-buttons,action-expense-attrs-expense-company-cb,action-expense-attrs-multiple-users"
	    onSave="action-expense-method-validate-date,action-expense-method-compute-amounts,action-expense-method-compute" canCopy="false">
		<toolbar>
			<button name="printExpense" title="Print" colSpan="2" icon="fa-print" onClick="save,action-print-expense"/>
		</toolbar>
	    <panel sidebar="true" name="actions" title="Actions" stacked="true">
	    	<button name="sendExpenses" colSpan="4" title="Send Expenses" onClick="action-expense-group-send" readonlyIf="statusSelect &gt; 1"/>
			<button name="ventilate" colSpan="4" title="Ventilate" onClick="action-expense-method-ventilate" readonlyIf="statusSelect != 3 || ventilated"/>
	    	<button name="validateButton" onClick="action-expense-group-validate" title="Validate"/>
	    	<button name="refuseButton" onClick="action-expense-group-refuse" title="Refuse"/>
	    	<button name="cancelButton" onClick="action-expense-validate-period,save,com.axelor.apps.hr.web.expense.ExpenseController:cancel,action-expense-attrs-buttons" hideIf="statusSelect == 6" title="Cancel" icon="fa-close"/>
	    	<button name="draftButton" onClick="action-expense-record-draft,save,action-expense-attrs-buttons" title="Return to draft status" showIf="statusSelect &gt; 3 "/>
	    	<button name="addPaymentButton" title="Register payment" onClick="action-expense-method-add-payment" showIf="statusSelect == 3  &amp;&amp; (paymentStatusSelect == 0 || paymentStatusSelect == 2)"/>
	    	<button name="cancelPaymentButton" title="Cancel payment"
					showIf="(paymentStatusSelect == 1 || paymentStatusSelect == 3) &amp;&amp; !bankOrder"
					onClick="action-expense-method-cancel-payment"/>
	    </panel>
		<panel>
			<field name="expenseSeq"/>
		    <field name="statusSelect" colSpan="12" widget="NavSelect" showTitle="false"/>
			<field name="multipleUsers" colSpan="12" hidden="true" onChange="action-expense-attrs-multiple-users"/>
			<field name="company" form-view="company-form" grid-view="company-grid" readonlyIf="ventilated"/>
			<field name="user" form-view="user-form" grid-view="user-grid"/>
			<field name="bankDetails" widget="SuggestBox" onSelect="action-accounting-batch-attrs-bank-details-domain" form-view="bank-details-form" grid-view="bank-details-grid" if="__config__.general.getManageMultiBanks()" if-module="axelor-cash-management"/>
			<field name="period" onSelect="action-expense-attrs-domain-period" form-view="period-form" grid-view="period-grid" readonlyIf="ventilated"/>
			<field name="companyCbSelect" onChange="action-expense-attrs-expense-company-cb" readonlyIf="ventilated"/>
			<field name="withdrawnCash" hidden="true" showIf="companyCbSelect > 1" />
			<field name="personalExpenseAmount" hidden="true" />
			<field name="advanceAmount" hidden="true" />
		</panel>
		<panel-tabs>
			<panel-related field="expenseLineList" height="20" title="General expenses" readonlyIf="statusSelect &gt; 1" onChange="action-expense-method-compute" editable="true" form-view="expense-line-form" grid-view="expense-line-grid" colSpan="12" />
			<panel title="Kilometric Allowances">
				<field name="kilometricExpenseLineList" readonlyIf="statusSelect &gt; 1" colSpan="12" showTitle="false" onChange="action-expense-method-compute"  >
				<editor x-show-on-new="false" x-viewer="true" x-layout="table" colSpan="12" itemSpan="4" onNew="action-kilometric-allowance-record-default,action-expense-line-method-fill-kilometric-expense-product" >
					<field name="expenseDate" title="Date" onChange="action-kilometric-allowance-method-compute" />
					<field name="kilometricAllowParam" onChange="action-kilometric-allowance-method-compute" canEdit="false" required="true" />
			        <field name="kilometricTypeSelect" required="true" onChange="action-kilometric-allowance-method-compute" />
			        <field name="fromCity" required="true" />
			        <field name="toCity" required="true"/>
			        <field name="distance" required="true" onChange="action-kilometric-allowance-method-compute" />
				    <field name="totalAmount" title="Total A.T.I" onChange="action-expense-on-change-untaxt-amount, action-expense-line-method-compute-analytic-distribution" colSpan="2" readonly="true"/>
			   	    <field name="projectTask" title="Project" requiredIf="toInvoice" canView="false" domain="self.imputable = true" widget="SuggestBox" colSpan="4" grid-view="project-task-grid"/>
			   	    <field name="comments" colSpan="6" height="2" />
			   		<field name="untaxedAmount" hidden="true" />
			   		<field name="expenseProduct" readonly="true" form-view="product-expense-form" grid-view="product-expense-grid" hidden="true"/> 
				</editor>
				</field>
			</panel>
			<panel-related field="employeeAdvanceUsageList" title="Employee advance list" readonly="false" canNew="false" canSelect="false" canEdit="true" editable="true" form-view="employee-advance-usage-expense-form" grid-view="employee-advance-usage-expense-grid" />
		</panel-tabs>
		<panel showIf="sentDate">
			<field name="sentDate" hidden="true" colSpan="4" showIf="sentDate"/>
			<field name="validatedBy" hidden="true" form-view="user-form" grid-view="user-grid" showIf="validatedBy" colSpan="4"/>
			<field name="validationDate" hidden="true" showIf="validationDate" colSpan="4"/>
			<field name="refusedBy" hidden="true" form-view="user-form" grid-view="user-grid" showIf="refusedBy" colSpan="4"/>
			<field name="refusalDate" hidden="true" showIf="refusalDate"/>
			<field name="groundForRefusal" hidden="true" showIf="statusSelect == 5" colSpan="12" readonly="true"/>
			<field name="moveDate" hidden="true" colSpan="4" showIf="statusSelect == 3 || statusSelect == 4" readonly="true"/>
			<field name="move" showIf="ventilated" form-view="move-form" grid-view="move-grid"  readonly="true"/>
			<field name="paymentStatusSelect" colSpan="4"/>
			<field name="paymentDate" hidden="true" colSpan="4" showIf="statusSelect == 3 || statusSelect == 4"/>
			<field name="paymentMode" hidden="true" colSpan="4" showIf="paymentMode" readonlyIf="$contains([1, 3], paymentStatusSelect)"/>
			<field name="bankOrder" showIf="(statusSelect == 3 || statusSelect == 4) &amp;&amp; paymentMode &amp;&amp; paymentMode.generateBankOrder" colSpan="4"/>
		    <field name="ventilated" hidden="true" title="Expense Ventilated" readonly="true" colSpan="4" showIf="ventilated"/>
		</panel>
		<panel sidebar="true" readonly="true"  colSpan="4">  
	  		<field name="inTaxTotal" css="order-subtotal" showTitle="false" colSpan="12">
	          <viewer>
	            &lt;dl class="dl-horizontal"&gt;
	              &lt;dt x-translate&gt;Total W.T.&lt;/dt&gt;
	              &lt;dd&gt;{{record.exTaxTotal}}&lt;/dd&gt;
	              &lt;dt x-translate&gt;Total tax&lt;/dt&gt;
	              &lt;dd&gt;{{record.taxTotal}}&lt;/dd&gt;
	              &lt;dt class="order-subtotal-total" x-translate&gt;Total A.T.I.&lt;/dt&gt;
	              &lt;dd class="order-subtotal-total"&gt;{{record.inTaxTotal}}&lt;/dd&gt;
	               &lt;dt ng-show="record.personalExpenseAmount != 0" x-translate &gt;Personal expense&lt;/dt&gt;
				  &lt;dd ng-show="record.personalExpenseAmount != 0" &gt; -{{record.personalExpenseAmount | number:2}}&lt;/dd&gt;
	              &lt;dt ng-show="record.withdrawnCash != 0" x-translate&gt;Withdrawn cash&lt;/dt&gt;
	              &lt;dd ng-show="record.withdrawnCash != 0" &gt;-{{record.withdrawnCash | number:2}}&lt;/dd&gt;
	              &lt;dt ng-show="record.advanceAmount != 0" x-translate&gt;Advance&lt;/dt&gt;
	              &lt;dd ng-show="record.advanceAmount != 0" &gt;-{{record.advanceAmount | number:2}}&lt;/dd&gt;
	              &lt;dt ng-show="(record.statusSelect == 3 || record.statusSelect == 4 &amp;&amp; record.paymentAmount != 0) &amp;&amp; (record.paymentStatusSelect == 1 || record.paymentStatusSelect == 3)"  ng-style="{'color' : 'blue'}" x-translate&gt;Payment&lt;/dt&gt;
             	  &lt;dd ng-show="(record.statusSelect == 3 || record.statusSelect == 4 &amp;&amp; record.paymentAmount != 0) &amp;&amp; (record.paymentStatusSelect == 1 || record.paymentStatusSelect == 3)"  ng-style="{'color' : 'blue'}"&gt;-{{record.paymentAmount  | number:2}}&lt;/dd&gt;
	              &lt;dt class="order-subtotal-total" x-translate&gt;TotalToRefund&lt;/dt&gt;
	              &lt;dd class="order-subtotal-total"&gt;{{record.inTaxTotal - record.advanceAmount - record.withdrawnCash - record.personalExpenseAmount - record.paymentAmount | number:2}}&lt;/dd&gt;
	            &lt;/dl&gt;
	          </viewer>
	        </field>
      </panel>
	</form>
	
	<form name="popup-expense-refusal-form" title="Ground for refusal" model="com.axelor.apps.hr.db.Expense">
		<field name="groundForRefusal" showTitle="false"/>
	</form>
	
	<form name="popup-expense-form" title="Select the expense you want to edit" model="com.axelor.apps.base.db.Wizard" onNew="action-expense-attrs-domain-expense-select">
		<field name="$expenseSelect" title="Select Expense" type="many-to-one" target="com.axelor.apps.hr.db.Expense" widget="SuggestBox" />
		<button name="editExpenseSelected" title="Edit Expense Selected" onClick="com.axelor.apps.hr.web.expense.ExpenseController:editExpenseSelected,close"/>
	</form>
	
	<action-group name="action-expense-group-send">
		<action name="save"/>
		<action name="action-expense-method-send"/>
		<action name="action-expense-attrs-buttons"/>
	</action-group>
	
	<action-group name="action-expense-group-validate">
		<action name="action-expense-method-valid"/>
		<action name="action-expense-attrs-buttons"/>
	</action-group>
	
	<action-group name="action-expense-group-refuse">
		<action name="action-expense-method-refuse"/>
		<action name="action-expense-refusal-popup-form"/>
		<action name="action-expense-attrs-buttons"/>
		<action name="save"/>
	</action-group>
	
	<action-record name="action-expense-record-default" model="com.axelor.apps.hr.db.Expense">
	    <field name="user" expr="eval:__user__"/>
	    <field name="company" expr="eval: __user__.activeCompany"/>
	    <field name="period" expr="eval: __repo__.of(Period).all().filter('self.fromDate &lt;= ?1 AND self.toDate &gt;= ?1',__date__).fetchOne()"/>
		<field name="exTaxTotal" expr="eval: 0"/>
    	<field name="taxTotal" expr="eval: 0"/>
    	<field name="inTaxTotal" expr="eval: 0"/>
    	<field name="multipleUsers" expr="eval: setMultipleUsers" if="setMultipleUsers"/>
	</action-record>

	<action-record name="action-expense-record-draft" model="com.axelor.apps.hr.db.Expense">
	    <field name="statusSelect" expr="1"/>
	</action-record>
	
	<action-attrs name="action-expense-attrs-domain-expense-select">
		<attribute name="domain" for="$expenseSelect" expr="eval: &quot; self.statusSelect = 1 AND self.user = ${__user__.id} &quot;"/>
	</action-attrs>
	
	<action-attrs name="action-expense-attrs-domain-period">
		<attribute name="domain" for="period" expr="eval: &quot; self.fromDate &lt;= CURRENT_DATE AND self.statusSelect = 1 &quot;"/>
	</action-attrs>
	
	<action-method name="action-expense-method-compute">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="compute"/>
	</action-method>
	
	<action-method name="action-expense-method-validate-date">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="validateDates"/>
	</action-method>
	
	<action-method name="action-expense-method-ventilate">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="ventilate"/>
	</action-method>
	
	<action-method name="action-print-expense">
    	<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="printExpense"/>
    </action-method>
    
    <action-method name="action-expense-method-send">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="send"/>
	</action-method>
	
	<action-method name="action-expense-method-valid">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="valid"/>
	</action-method>
	
	<action-method name="action-expense-method-refuse">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="refuse"/>
	</action-method>
	
	<action-method name="action-expense-method-add-payment">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="addPayment"/>
	</action-method>

	<action-method name="action-expense-method-cancel-payment">
		<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="cancelPayment"/>
	</action-method>
	
	<action-attrs name="action-expense-attrs-buttons">
		<attribute name="hidden" for="validateButton" expr="eval: !(statusSelect == 2 &amp;&amp; (__user__ == user?.employee?.manager || (__user__ == user &amp;&amp; user?.employee?.manager == null) || __user__ == user?.employee?.manager?.employee?.manager || __user__.employee?.hrManager))"/>
		<attribute name="hidden" for="refuseButton" expr="eval: !(statusSelect == 2 &amp;&amp; (__user__ == user?.employee?.manager || (__user__ == user &amp;&amp; user?.employee?.manager == null) || __user__ == user?.employee?.manager?.employee?.manager || __user__.employee?.hrManager))"/>
		<attribute name="hidden" for="cancelButton" expr="eval: period?.toDate &lt; __date__ || statusSelect == 6"/>
	</action-attrs>
	
	<action-attrs name="action-expense-attrs-multiple-users">
		<attribute name="hidden" for="expenseLineList.user" expr="eval: !multipleUsers"/>
	</action-attrs>
	
	<action-attrs name="action-expense-attrs-expense-company-cb">
		<attribute name="hidden" for="expenseLineList.companyCbPaymentSelect" expr="eval: companyCbSelect == 1"/>
	</action-attrs>
	
	<action-validate name="action-expense-validate-period">
		<error message="Period is closed" if="period?.statusSelect == 2"/>
	</action-validate>
	
	<action-view name="action-expense-refusal-popup-form" title="Ground for refusal" model="com.axelor.apps.hr.db.Expense">
    	<view type="form" name="popup-expense-refusal-form"/>
        <view-param name="popup" value="reload"/>
        <view-param name="show-toolbar" value="false"/>
  		<view-param name="show-confirm" value="true" />
	  	<view-param name="popup-save" value="true"/>
	  	<view-param name="forceEdit" value="true" />
    	<context name="_showRecord" expr="eval: id"/>
    </action-view>
    
    <action-method name="action-expense-method-compute-amounts">
    	<call class="com.axelor.apps.hr.web.expense.ExpenseController" method="computeAmounts"/>
    </action-method>
    
</object-views>
